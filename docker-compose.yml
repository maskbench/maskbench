services:
    runner:
        container_name: ${USER}_maskbench_dev
        build: .                
        env_file: 
          - .env
        depends_on:
          - openpose
          - sam2
          - maskanyone
        volumes:
          - ./src:/src          
          - ./poetry.lock:/poetry.lock 
          - ./pyproject.toml:/pyproject.toml
          - ./config:/config
          - ${MASKBENCH_WEIGHTS_DIR}:/weights/user_weights
          - ${MASKBENCH_DATASET_DIR}:/datasets  
          - ${MASKBENCH_OUTPUT_DIR}:/output
        tty: true               # Keep the container running interactively
        stdin_open: true
        deploy:
          resources:
            reservations:
              devices:
                - driver: nvidia
                  device_ids: ['1']
                  capabilities: [ gpu ]
    
    sam2:
      image: ghcr.io/maskanyone/maskanyone/sam2:${MASK_ANYONE_VERSION}
      restart: on-failure
      environment:
        SAM2_OFFLOAD_VIDEO_TO_CPU: false
        SAM2_OFFLOAD_STATE_TO_CPU: false
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                device_ids: ['1']
                capabilities: [ gpu ]
  
    maskanyone:
      image: ghcr.io/maskanyone/maskanyone/api:${MASK_ANYONE_VERSION}
      restart: on-failure
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                device_ids: ['1']
                capabilities: [ gpu ]
    
    openpose:
      image: ghcr.io/maskanyone/maskanyone/openpose:${MASK_ANYONE_VERSION}
      restart: on-failure
      environment:
        OPENPOSE_MODEL_DIR: "/workspace/openpose/models"
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                device_ids: ['1']
                capabilities: [ gpu ]

